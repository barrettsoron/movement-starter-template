---
import { getCollection } from 'astro:content'
import DefaultLayout from '../../layouts/DefaultLayout.astro'
import PageHeader from '../../components/PageHeader.astro'
import { Icon } from 'astro-icon/components'

export async function getStaticPaths({ paginate }: any) {
  const stories = await getCollection('stories')
  const sortedStories = stories.sort((a: any, b: any) => 
    new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf()
  )
  
  return paginate(sortedStories, {
    pageSize: 9,
  })
}

const { page } = Astro.props
const stories = page.data
---

<DefaultLayout
  title="Stories"
  description="Personal stories and experiences from our movement"
>
  <PageHeader>
    <h1>Stories</h1>
    <p>Personal experiences and voices from our movement</p>
  </PageHeader>
  
  <section class="container stories-grid">
    {stories.map((story: any) => (
      <article class="story-card">
        {story.data.image && (
          <div class="story-image">
            <img src={story.data.image} alt={story.data.imageAlt || ''} />
          </div>
        )}
        <div class="story-content">
          <h2>
            <a href={`/stories/${story.slug}`}>{story.data.title}</a>
          </h2>
          <div class="story-meta">
            <time datetime={story.data.publishDate.toISOString()}>
              {new Date(story.data.publishDate).toLocaleDateString('en-CA', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </time>
            {story.data.author && (
              <>
                <span aria-hidden="true">â€¢</span>
                <span>By {story.data.author}</span>
              </>
            )}
          </div>
          <p>{story.data.description}</p>
          {story.data.tags && story.data.tags.length > 0 && (
            <div class="story-tags">
              {story.data.tags.map((tag: string) => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          )}
        </div>
      </article>
    ))}
  </section>

  {(page.url.prev || page.url.next) && (
    <nav class="container pagination">
      {page.url.prev && (
        <a href={page.url.prev} class="pagination-link prev">
          <Icon name="lucide:arrow-left" />
          Previous
        </a>
      )}
      <span class="page-info">
        Page {page.currentPage} of {page.lastPage}
      </span>
      {page.url.next && (
        <a href={page.url.next} class="pagination-link next">
          Next
          <Icon name="lucide:arrow-right" />
        </a>
      )}
    </nav>
  )}
</DefaultLayout>

<style lang="scss">
  .stories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2rem;
    margin: 3rem auto;
  }

  .story-card {
    border: 2px solid var(--border-color);
    border-radius: 0.5rem;
    overflow: hidden;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    background: var(--background);
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
    }
  }

  .story-image {
    aspect-ratio: 16 / 9;
    overflow: hidden;
    
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }
    
    .story-card:hover & img {
      transform: scale(1.05);
    }
  }

  .story-content {
    padding: 1.5rem;
    
    h2 {
      margin: 0 0 0.5rem;
      font-size: 1.5rem;
      line-height: 1.3;
      
      a {
        color: var(--heading-color);
        text-decoration: none;
        
        &:hover {
          text-decoration: underline;
        }
      }
    }
    
    p {
      margin: 1rem 0;
      color: var(--text-color);
      line-height: 1.6;
    }
  }

  .story-meta {
    display: flex;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: var(--text-muted);
    margin-bottom: 1rem;
  }

  .story-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
    
    .tag {
      padding: 0.25rem 0.75rem;
      background: var(--primary-color, #2563eb);
      color: white;
      border-radius: 9999px;
      font-size: 0.75rem;
      font-weight: 500;
    }
  }

  .pagination {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 3rem auto;
    padding: 1rem 0;
    border-top: 2px solid var(--border-color);
    
    .pagination-link {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 1rem;
      color: var(--link-color);
      text-decoration: none;
      transition: all 0.2s ease;
      
      &:hover {
        background: var(--background-alt);
        border-radius: 0.375rem;
      }
      
      &.prev {
        margin-right: auto;
      }
      
      &.next {
        margin-left: auto;
      }
      
      :global(svg) {
        width: 20px;
        height: 20px;
      }
    }
    
    .page-info {
      color: var(--text-muted);
      font-size: 0.875rem;
    }
  }
</style>